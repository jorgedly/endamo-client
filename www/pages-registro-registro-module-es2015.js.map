{"version":3,"sources":["./src/app/pages/registro/registro.page.html","./src/app/pages/registro/registro-routing.module.ts","./src/app/pages/registro/registro.module.ts","./src/app/pages/registro/registro.page.scss","./src/app/pages/registro/registro.page.ts","./src/app/services/service.service.ts"],"names":[],"mappings":"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","file":"pages-registro-registro-module-es2015.js","sourcesContent":["module.exports = \"<ion-content>\\r\\n\\r\\n    <ion-slides class=\\\"mainSlide\\\" #slidePrincipal>\\r\\n  \\r\\n      <ion-slide>\\r\\n   \\r\\n          <ion-grid fixed>\\r\\n  \\r\\n            <ion-row>\\r\\n            <ion-col>\\r\\n                <h3>Seleccione Avatar</h3>\\r\\n            </ion-col>\\r\\n            </ion-row>\\r\\n  \\r\\n            <ion-row>\\r\\n            <ion-col>\\r\\n                <ion-slides [options]=\\\"avatarSlide\\\">\\r\\n                <ion-slide *ngFor=\\\"let avatar of avatars\\\">\\r\\n                    <img class=\\\"pick-avatar\\\" \\r\\n                            src=\\\"{{avatar.img}}\\\"\\r\\n                            [ngClass]=\\\"{'pick-avatar-seleccionado': avatar.seleccionado}\\\"\\r\\n                            (click)=\\\"seleccionarAvatar(avatar)\\\"><img>\\r\\n                </ion-slide>\\r\\n                </ion-slides>\\r\\n            </ion-col>\\r\\n            </ion-row>\\r\\n        \\r\\n            <form (ngSubmit)=\\\"registrar_usuario(fRegistroUsuario)\\\" #fRegistroUsuario=\\\"ngForm\\\">\\r\\n                <ion-row>\\r\\n                    <ion-col>\\r\\n                        \\r\\n                        <ion-list>\\r\\n                            \\r\\n                            <ion-item color=\\\"transparent\\\">\\r\\n                            <ion-label>Email    </ion-label>\\r\\n                            <ion-input  name=\\\"email\\\" \\r\\n                                        type=\\\"email\\\"\\r\\n                                        [(ngModel)] = \\\"registerUser.email\\\"\\r\\n                                        required></ion-input>\\r\\n                            </ion-item>\\r\\n  \\r\\n                            <ion-item color=\\\"transparent\\\">\\r\\n                            <ion-label>Nombre   </ion-label>\\r\\n                            <ion-input  name=\\\"nombre\\\"\\r\\n                                        type=\\\"text\\\"\\r\\n                                        [(ngModel)] = \\\"registerUser.name\\\"\\r\\n                                        required></ion-input>\\r\\n                            </ion-item>\\r\\n  \\r\\n                            <ion-item color=\\\"transparent\\\">\\r\\n                            <ion-label>Password     </ion-label>\\r\\n                            <ion-input  name=\\\"password\\\"\\r\\n                                        type=\\\"password\\\"\\r\\n                                        [(ngModel)] = \\\"registerUser.password\\\"\\r\\n                                        required></ion-input>\\r\\n                            </ion-item>\\r\\n  \\r\\n                        </ion-list>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n                \\r\\n                <ion-row>\\r\\n                <ion-col>\\r\\n                    <ion-button type=\\\"submit\\\"\\r\\n                                color=\\\"dark\\\"\\r\\n                                shape=\\\"round\\\">\\r\\n                        Crear Usuario\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n            \\r\\n            </form>\\r\\n        </ion-grid>\\r\\n  \\r\\n      </ion-slide>\\r\\n  \\r\\n      \\r\\n      <ion-slide>\\r\\n\\r\\n        <ion-grid fixed>\\r\\n  \\r\\n        \\r\\n            <form (ngSubmit)=\\\"registrar_empresa(fRegistroEmpresa)\\\" #fRegistroEmpresa=\\\"ngForm\\\">\\r\\n                <ion-row>\\r\\n                    <ion-col>\\r\\n                        \\r\\n                        <ion-list>\\r\\n                            \\r\\n                            <ion-item color=\\\"transparent\\\">\\r\\n                            <ion-label>Email    </ion-label>\\r\\n                            <ion-input  name=\\\"email\\\" \\r\\n                                        type=\\\"email\\\"\\r\\n                                        [(ngModel)] = \\\"registerEmpresa.email\\\"\\r\\n                                        required></ion-input>\\r\\n                            </ion-item>\\r\\n  \\r\\n                            <ion-item color=\\\"transparent\\\">\\r\\n                            <ion-label>Nombre   </ion-label>\\r\\n                            <ion-input  name=\\\"nombre\\\"\\r\\n                                        type=\\\"text\\\"\\r\\n                                        [(ngModel)] = \\\"registerEmpresa.name\\\"\\r\\n                                        required></ion-input>\\r\\n                            </ion-item>\\r\\n  \\r\\n                            <ion-item color=\\\"transparent\\\">\\r\\n                            <ion-label>Password     </ion-label>\\r\\n                            <ion-input  name=\\\"password\\\"\\r\\n                                        type=\\\"password\\\"\\r\\n                                        [(ngModel)] = \\\"registerEmpresa.password\\\"\\r\\n                                        required></ion-input>\\r\\n                            </ion-item>\\r\\n                            <ion-item>\\r\\n                                <button routerLink=\\\"/cargamasiva\\\">\\r\\n                                    Ir a Carga Masiva\\r\\n                                </button>\\r\\n                            </ion-item>\\r\\n  \\r\\n                        </ion-list>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n                \\r\\n                <ion-row>\\r\\n                <ion-col>\\r\\n                    <ion-button type=\\\"submit\\\"\\r\\n                                color=\\\"dark\\\"\\r\\n                                shape=\\\"round\\\">\\r\\n                        Crear Empresa\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n            \\r\\n            </form>\\r\\n        </ion-grid>\\r\\n\\r\\n      </ion-slide>\\r\\n\\r\\n      <ion-slide>\\r\\n\\r\\n        <ion-grid fixed>\\r\\n  \\r\\n            <ion-row>\\r\\n            <ion-col>\\r\\n                <h3>¡Bienvenido!</h3>\\r\\n            </ion-col>\\r\\n            </ion-row>\\r\\n  \\r\\n            <ion-row>\\r\\n                <ion-col class=\\\"center\\\">\\r\\n                    <img class=\\\"pick-avatar-seleccionado\\\" \\r\\n                    src=\\\"/assets/avatars/av-2.png\\\">\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n\\r\\n            <form (ngSubmit)=\\\"login(fLogin)\\\" #fLogin=\\\"ngForm\\\">\\r\\n                <ion-row>\\r\\n                    <ion-col>\\r\\n                        \\r\\n                        <ion-list>\\r\\n                            \\r\\n                            <ion-item color=\\\"transparent\\\">\\r\\n                            <ion-label>Email     </ion-label>\\r\\n                            <ion-input  name=\\\"email\\\" \\r\\n                                        type=\\\"email\\\"\\r\\n                                        [(ngModel)] = \\\"loginUser.email\\\"\\r\\n                                        required></ion-input>\\r\\n                            </ion-item>\\r\\n  \\r\\n                            <ion-item color=\\\"transparent\\\">\\r\\n                            <ion-label>Password     </ion-label>\\r\\n                            <ion-input  name=\\\"password\\\"\\r\\n                                        type=\\\"password\\\"\\r\\n                                        [(ngModel)] = \\\"loginUser.password\\\"\\r\\n                                        required></ion-input>\\r\\n                            </ion-item>\\r\\n  \\r\\n                        </ion-list>\\r\\n                    </ion-col>\\r\\n                </ion-row>\\r\\n                \\r\\n                <ion-row>\\r\\n                <ion-col>\\r\\n                    <ion-button type=\\\"submit\\\"\\r\\n                                color=\\\"dark\\\"\\r\\n                                shape=\\\"round\\\">\\r\\n                        Iniciar Sesion\\r\\n                    </ion-button>\\r\\n                </ion-col>\\r\\n            </ion-row>\\r\\n            \\r\\n            </form>\\r\\n        </ion-grid>\\r\\n  \\r\\n      </ion-slide>\\r\\n    </ion-slides>\\r\\n  \\r\\n  </ion-content>\\r\\n  \\r\\n  \\r\\n  <ion-footer no-border>\\r\\n    <ion-toolbar >\\r\\n      \\r\\n      <ion-row>\\r\\n  \\r\\n        <ion-col>\\r\\n            <ion-button shape=\\\"round\\\"\\r\\n                        expand=\\\"full\\\"\\r\\n                        size=\\\"small\\\"\\r\\n                        color=\\\"primary\\\"\\r\\n                        (click)=\\\"mostrarLogin()\\\">\\r\\n              Ingresar\\r\\n            </ion-button>\\r\\n        </ion-col>\\r\\n  \\r\\n        <ion-col>\\r\\n          <ion-button shape=\\\"round\\\"\\r\\n                      expand=\\\"full\\\"\\r\\n                      size=\\\"small\\\"\\r\\n                      color=\\\"primary\\\"\\r\\n                      (click)=\\\"mostrarRegistro()\\\">\\r\\n            {{textButton}}\\r\\n          </ion-button>\\r\\n        </ion-col>\\r\\n  \\r\\n      </ion-row>\\r\\n  \\r\\n  \\r\\n  \\r\\n    </ion-toolbar >\\r\\n</ion-footer>\"","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegistroPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class RegistroPageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegistroPageRoutingModule } from './registro-routing.module';\r\n\r\nimport { RegistroPage } from './registro.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RegistroPageRoutingModule\r\n  ],\r\n  declarations: [RegistroPage]\r\n})\r\nexport class RegistroPageModule {}\r\n","module.exports = \".mainSlide, .mainSlide {\\n  width: 100%;\\n  height: 100%;\\n  background-color: blue;\\n  background-image: -webkit-gradient(linear, left top, right bottom, from(#032fb4), color-stop(#1fa8a8), to(white));\\n  background-image: linear-gradient(to bottom right, #032fb4, #1fa8a8, white);\\n}\\n\\nion-item {\\n  background-color: transparent;\\n}\\n\\nion-list {\\n  background-color: transparent;\\n}\\n\\nion-toolbar {\\n  background-color: black;\\n}\\n\\nion-col.center {\\n  text-align: center;\\n}\\n\\nimg {\\n  width: 120px;\\n}\\n\\n.pick-avatar {\\n  width: 80px;\\n  opacity: 0.3;\\n}\\n\\n.pick-avatar-seleccionado {\\n  -webkit-transition: opacity 0.5s linear;\\n  transition: opacity 0.5s linear;\\n  opacity: 1 !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcmVnaXN0cm8vRDpcXGdvbWV6XFxEb2N1bWVudHNcXERvd25sb2Fkc1xcVVNBQ1xcZW5kYW1vLWNsaWVudC9zcmNcXGFwcFxccGFnZXNcXHJlZ2lzdHJvXFxyZWdpc3Ryby5wYWdlLnNjc3MiLCJzcmMvYXBwL3BhZ2VzL3JlZ2lzdHJvL3JlZ2lzdHJvLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFdBQUE7RUFDQSxZQUFBO0VBQ0Esc0JBQUE7RUFDQSxpSEFBQTtFQUFBLDJFQUFBO0FDQ0o7O0FERUE7RUFDSSw2QkFBQTtBQ0NKOztBREVBO0VBQ0ksNkJBQUE7QUNDSjs7QURFQTtFQUNJLHVCQUFBO0FDQ0o7O0FERUE7RUFDRSxrQkFBQTtBQ0NGOztBREVBO0VBQ0ksWUFBQTtBQ0NKOztBREVBO0VBQ0ksV0FBQTtFQUNBLFlBQUE7QUNDSjs7QURFQTtFQUNJLHVDQUFBO0VBQUEsK0JBQUE7RUFDQSxxQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcmVnaXN0cm8vcmVnaXN0cm8ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1haW5TbGlkZSwgLm1haW5TbGlkZXtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20gcmlnaHQsIHJnYigzLCA0NywgMTgwKSwgcmdiKDMxLCAxNjgsIDE2OCkgLCB3aGl0ZSk7ICBcclxufVxyXG5cclxuaW9uLWl0ZW17XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuaW9uLWxpc3R7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG5cclxuaW9uLXRvb2xiYXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcclxufVxyXG5cclxuaW9uLWNvbC5jZW50ZXIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuaW1nIHtcclxuICAgIHdpZHRoOiAxMjBweDtcclxufVxyXG5cclxuLnBpY2stYXZhdGFyIHtcclxuICAgIHdpZHRoOiA4MHB4O1xyXG4gICAgb3BhY2l0eTogMC4zO1xyXG59XHJcblxyXG4ucGljay1hdmF0YXItc2VsZWNjaW9uYWRvIHtcclxuICAgIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBsaW5lYXI7IFxyXG4gICAgb3BhY2l0eTogMSAhaW1wb3J0YW50O1xyXG59IiwiLm1haW5TbGlkZSwgLm1haW5TbGlkZSB7XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byBib3R0b20gcmlnaHQsICMwMzJmYjQsICMxZmE4YTgsIHdoaXRlKTtcbn1cblxuaW9uLWl0ZW0ge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuaW9uLWxpc3Qge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuaW9uLXRvb2xiYXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjaztcbn1cblxuaW9uLWNvbC5jZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbmltZyB7XG4gIHdpZHRoOiAxMjBweDtcbn1cblxuLnBpY2stYXZhdGFyIHtcbiAgd2lkdGg6IDgwcHg7XG4gIG9wYWNpdHk6IDAuMztcbn1cblxuLnBpY2stYXZhdGFyLXNlbGVjY2lvbmFkbyB7XG4gIHRyYW5zaXRpb246IG9wYWNpdHkgMC41cyBsaW5lYXI7XG4gIG9wYWNpdHk6IDEgIWltcG9ydGFudDtcbn0iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { IonSlides, ToastController } from '@ionic/angular';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ServiceService } from 'src/app/services/service.service';\r\n\r\n@Component({\r\n  selector: 'app-registro',\r\n  templateUrl: './registro.page.html',\r\n  styleUrls: ['./registro.page.scss'],\r\n})\r\nexport class RegistroPage implements OnInit {\r\n\r\n  id = null;\r\n\r\n  @ViewChild('slidePrincipal', {static: true}) slides: IonSlides;\r\n\r\n  avatars = [\r\n    {\r\n      img: '/assets/avatars/av-1.png',\r\n      seleccionado: true\r\n    },\r\n    {\r\n      img: '/assets/avatars/av-2.png',\r\n      seleccionado: false\r\n    },\r\n    {\r\n      img: '/assets/avatars/av-3.png',\r\n      seleccionado: false\r\n    },\r\n    {\r\n      img: '/assets/avatars/av-4.png',\r\n      seleccionado: false\r\n    },\r\n    {\r\n      img: '/assets/avatars/av-5.png',\r\n      seleccionado: false\r\n    },\r\n    {\r\n      img: '/assets/avatars/av-6.png',\r\n      seleccionado: false\r\n    },\r\n    {\r\n      img: '/assets/avatars/av-7.png',\r\n      seleccionado: false\r\n    },\r\n    {\r\n      img: '/assets/avatars/av-8.png',\r\n      seleccionado: false\r\n    },\r\n  ];\r\n\r\n  avatarSlide = {\r\n    slidesPerView: 3.5\r\n  }\r\n\r\n  isUserSlide = false;\r\n  textButton = 'Registrar Empresa';\r\n\r\n  loginUser = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  registerUser = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    avatar: '/assets/avatars/av-1.png'\r\n  }\r\n\r\n  registerEmpresa = {\r\n    name: '',\r\n    email: '',\r\n    password: ''\r\n  }\r\n\r\n  constructor(private activeRoute: ActivatedRoute, \r\n              private service: ServiceService,\r\n              public toastController: ToastController,\r\n              private route: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.id = this.activeRoute.snapshot.paramMap.get('id');\r\n    this.slides.slideTo(this.id);\r\n    this.slides.lockSwipes(true);\r\n  }\r\n\r\n  /*Métodos de navegación*/\r\n  seleccionarAvatar(avatar){\r\n    this.avatars.forEach(av => av.seleccionado = false);\r\n    avatar.seleccionado = true;\r\n    this.registerUser.avatar = avatar.img;\r\n  }\r\n\r\n  mostrarLogin() {\r\n    this.slides.lockSwipes(false);\r\n    this.slides.slideTo(2);\r\n    this.slides.lockSwipes(true);\r\n  }\r\n\r\n  mostrarRegistro() {\r\n    this.slides.lockSwipes(false);\r\n\r\n    if(this.isUserSlide)\r\n    {\r\n      this.slides.slideTo(0);\r\n      this.textButton = 'Registrar Empresa';\r\n    }\r\n    else\r\n    {\r\n      this.slides.slideTo(1);\r\n      this.textButton = 'Registrar Usuario';\r\n    }\r\n\r\n    this.isUserSlide = !this.isUserSlide;\r\n    this.slides.lockSwipes(true);\r\n  }\r\n\r\n  async presentToast() {\r\n    const toast = await this.toastController.create({\r\n      message: '¡Datos Erroneos! Intenta nuevamente.',\r\n      color: 'danger',\r\n      position: 'top',\r\n      duration: 2000\r\n    });\r\n    toast.present();\r\n  }\r\n\r\n  /*Métodos para consumir servicios e interactuar*/\r\n  async registrar_usuario(fRegistroUsuario: NgForm){\r\n    if(fRegistroUsuario.invalid)\r\n      this.presentToast();\r\n    else\r\n    {\r\n      const valido = await this.service.registro_cliente( this.registerUser.name, \r\n                                                          this.registerUser.email,\r\n                                                          this.registerUser.password, \r\n                                                          this.registerUser.avatar);\r\n\r\n      if(valido)\r\n        this.route.navigate(['/home-cliente']);\r\n      else\r\n        this.presentToast();\r\n    }\r\n  }\r\n\r\n  async registrar_empresa(fRegistroEmpresa: NgForm){\r\n    if(fRegistroEmpresa.invalid)\r\n      this.presentToast();\r\n    else\r\n    {\r\n      const valido = await this.service.registro_empresa( this.registerEmpresa.name, \r\n                                                          this.registerEmpresa.email,\r\n                                                          this.registerEmpresa.password);\r\n\r\n      if(valido)\r\n        this.route.navigate(['/home-cliente']);\r\n      else\r\n        this.presentToast();\r\n    }\r\n  }\r\n\r\n  async login(fLogin: NgForm) {\r\n    if(fLogin.invalid)\r\n      this.presentToast();\r\n    else\r\n    {\r\n      const valido = await this.service.login(this.loginUser.email, this.loginUser.password);\r\n\r\n      if(valido)\r\n        this.route.navigate(['/home-cliente']);\r\n      else\r\n        this.presentToast();\r\n    }\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceService {\r\n\r\n  token = null;\r\n\r\n  constructor(private http: HttpClient, private storage: Storage) { }\r\n\r\n  login(email: string, password: string) {\r\n    const data = { email, password };\r\n\r\n    return new Promise(resolve => {\r\n      this.http.post('',data)\r\n      .subscribe(resp => {\r\n        console.log(resp);\r\n        /*\r\n          if(loginCorrecto)\r\n          {\r\n            //si los datos son correctos, se guarda la informacion en el local storage\r\n            this.storage.set('token',ID);\r\n            this.storage.set('isClient', 1 cliente 0 empresa)\r\n            resolve(true);\r\n          }\r\n          else\r\n          {\r\n            this.token = null;\r\n            this.storage.clear();\r\n            resolve(false);\r\n          }\r\n        */\r\n      });\r\n    });\r\n\r\n  }\r\n\r\n  registro_cliente(name: string, email: string, password: string, avatar: string) {\r\n    const data = {name, email, password, avatar};\r\n\r\n    return new Promise(resolve => {\r\n      this.http.post('',data)\r\n      .subscribe(resp => {\r\n        console.log(resp);\r\n        /*\r\n          if(registroCorrecto)\r\n          {\r\n            //si los datos son correctos, se guarda la informacion en el local storage\r\n            this.storage.set('token',ID);\r\n            this.storage.set('isClient', 1 cliente)\r\n            resolve(true);\r\n          }\r\n          else\r\n          {\r\n            this.token = null;\r\n            this.storage.clear();\r\n            resolve(false);\r\n          }\r\n        */\r\n      });\r\n    });\r\n  }\r\n\r\n  registro_empresa(name: string, email: string, password: string) {\r\n    const datos = {name, email, password};\r\n\r\n    return new Promise(resolve => {\r\n      this.http.post('',datos)\r\n      .subscribe(resp => {\r\n        console.log(resp);\r\n        /*\r\n          if(registroCorrecto)\r\n          {\r\n            //si los datos son correctos, se guarda la informacion en el local storage\r\n            this.storage.set('token',ID);\r\n            this.storage.set('isEmpresa', 1 empresa)\r\n            resolve(true);\r\n          }\r\n          else\r\n          {\r\n            this.token = null;\r\n            this.storage.clear();\r\n            resolve(false);\r\n          }\r\n        */\r\n      });\r\n    });\r\n  } \r\n}\r\n"],"sourceRoot":""}